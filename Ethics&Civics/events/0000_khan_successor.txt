namespace = marauder

# The New Khanate (HIDDEN)
country_event = {
	id = marauder.602
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		owner_species = { save_event_target_as = marauder_species }
		every_owned_fleet = {
			limit = {
				count_owned_ship = {
					count < 1
					limit = { is_ship_size = starbase_marauder }
				}
			}
			delete_fleet = this
		}
		every_subject = {
			country_event = { id = marauder.671 days = 10 }
		}
		create_country = {
			name_list = random
			species = event_target:marauder_species
			type = default
			authority = auth_imperial
			civics = {
				civic = civic_great_khans_legacy
				civic = random
			}
			origin = "origin_khan_successor"
			ethos = {
				ethic = ethic_fanatic_militarist
				ethic = ethic_xenophobe
				ethic = ethic_spiritualist
				ethic = ethic_authoritarian
			}
			ignore_initial_colony_error = yes
		}
		last_created_country = {
			save_event_target_as = new_khanate
			set_country_flag = new_khanate_flag
			set_name = random
		}
		every_owned_fleet = {
			set_owner = event_target:new_khanate
		}
		every_owned_planet = {
			set_owner = event_target:new_khanate
			set_controller = event_target:new_khanate
		}
		every_system_within_border = {
			limit = { exists = starbase }
			starbase = {
				set_owner = event_target:new_khanate
			}
		}
		event_target:new_khanate = {
			add_resource = {
				minerals = 20000
				energy = 20000
				alloys = 20000
				consumer_goods = 20000
				food = 20000
				influence = 1000
			}
			copy_techs_from = { target = root }
			every_owned_starbase = {
				set_starbase_size = starbase_outpost
			}
			if = {
				limit = {
					any_owned_starbase = { has_starbase_size = starbase_outpost }
				}
				random_owned_starbase = {
					limit = { has_starbase_size = starbase_outpost }
					set_starbase_size = starbase_starhold
					set_starbase_module = {
						slot = 1
						module = shipyard
					}
					set_starbase_module = {
						slot = 2
						module = shipyard
					}
					set_starbase_module = {
						slot = 3
						module = shipyard
					}
				}
				if = {
					limit = {
						any_owned_starbase = { has_starbase_size = starbase_outpost }
					}
					random_owned_starbase = {
						limit = { has_starbase_size = starbase_outpost }
						set_starbase_size = starbase_starhold
					}
				}
				if = {
					limit = {
						any_owned_starbase = { has_starbase_size = starbase_outpost }
					}
					random_owned_starbase = {
						limit = { has_starbase_size = starbase_outpost }
						set_starbase_size = starbase_starhold
					}
				}
			}
			# Survey Own Space
			every_planet_within_border = {
				set_surveyed = {
					surveyed = yes
					surveyor = event_target:new_khanate
				}

			}
			# Survey Rest of Horde's Space
			root = {
				every_planet_within_border = {
					set_surveyed = {
						surveyed = yes
						surveyor = event_target:new_khanate
					}
				}
			}
			# Mining and Research Stations
			every_planet_within_border = {
				limit = {
					has_deposit_for = shipclass_mining_station
					has_mining_station = no
				}
				create_mining_station = {
					owner = event_target:new_khanate
				}
			}
			every_planet_within_border = {
				limit = {
					has_deposit_for = shipclass_research_station
					has_research_station = no
				}
				create_research_station = {
					owner = event_target:new_khanate
				}
			}
			create_marauder_successor_fleet = yes
			create_marauder_successor_fleet = yes
			create_marauder_successor_fleet = yes
		}
		# Establish Communications
		every_country = {
			limit = { has_communications = root }
			establish_communications_no_message = event_target:new_khanate
		}
		every_country = {
			limit = { has_modifier = satrapy_of_horde }
			remove_modifier = "satrapy_of_horde"
		}
		observer_event = { id = observer.22 }
		every_country = {
			limit = { is_ai = no }
			country_event = { id = marauder.640 }
		}
		destroy_country = yes
	}
}

# Democratic Federation (HIDDEN)
country_event = {
	id = marauder.603
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		owner_species = { save_event_target_as = marauder_species }
		every_owned_fleet = {
			limit = {
				count_owned_ship = {
					count < 1
					limit = { is_ship_size = starbase_marauder }
				}
			}
			delete_fleet = this
		}
		create_country = {
			name_list = random
			species = event_target:marauder_species
			type = default
			authority = auth_democratic
			civics = {
				civic = civic_democracy_and_clean_government
				civic = civic_true_hero
				civic = civic_idealistic_foundation
			}
			origin = "origin_khan_successor"
			ethos = {
				ethic = ethic_fanatic_egalitarian
				ethic = ethic_socialism
				ethic = ethic_fanatic_xenophile
			}
			ignore_initial_colony_error = yes
		}
		last_created_country = {
			save_event_target_as = new_khanate
			set_country_flag = democratic_khanate_flag
			set_name = random
		}
		every_owned_fleet = {
			set_owner = event_target:new_khanate
		}
		every_owned_planet = {
			set_owner = event_target:new_khanate
			set_controller = event_target:new_khanate
		}
		every_system_within_border = {
			limit = { exists = starbase }
			starbase = {
				set_owner = event_target:new_khanate
			}
		}
		event_target:new_khanate = {
			add_resource = {
				minerals = 20000
				energy = 20000
				alloys = 20000
				consumer_goods = 20000
				food = 20000
				influence = 1000
			}
			copy_techs_from = { target = root }
			every_owned_starbase = {
				set_starbase_size = starbase_outpost
			}
			if = {
				limit = {
					any_owned_starbase = { has_starbase_size = starbase_outpost }
				}
				random_owned_starbase = {
					limit = { has_starbase_size = starbase_outpost }
					set_starbase_size = starbase_starhold
					set_starbase_module = {
						slot = 1
						module = shipyard
					}
					set_starbase_module = {
						slot = 2
						module = shipyard
					}
					set_starbase_module = {
						slot = 3
						module = shipyard
					}
				}
			}
			# Survey Own Space
			every_planet_within_border = {
				set_surveyed = {
					surveyed = yes
					surveyor = event_target:new_khanate
				}
			}
			# Survey Rest of Marauder's Space
			root = {
				every_planet_within_border = {
					set_surveyed = {
						surveyed = yes
						surveyor = event_target:new_khanate
					}
				}
			}
			# Survey Rest of Horde's Space
			root = {
				every_planet_within_border = {
					set_surveyed = {
						surveyed = yes
						surveyor = event_target:new_khanate
					}
				}
			}
			# Mining and Research Stations
			every_planet_within_border = {
				limit = {
					has_deposit_for = shipclass_mining_station
					has_mining_station = no
				}
				create_mining_station = {
					owner = event_target:new_khanate
				}
			}
			every_planet_within_border = {
				limit = {
					has_deposit_for = shipclass_research_station
					has_research_station = no
				}
				create_research_station = {
					owner = event_target:new_khanate
				}
			}
			create_marauder_successor_fleet = yes
			create_marauder_successor_fleet = yes
			create_marauder_successor_fleet = yes
		}

		# Establish Communications
		every_country = {
			limit = { has_communications = root }
			establish_communications_no_message = event_target:new_khanate
		}
		every_country = {
			limit = { has_modifier = satrapy_of_horde }
			country_event = { id = marauder.660}
			remove_modifier = "satrapy_of_horde"
			set_subject_of = {
				who = none
			}
		}
		observer_event = { id = observer.23 }
		every_country = {
			limit = {
				NOT = { is_subject_type = satrapy }
				is_ai = no
			}
			country_event = { id = marauder.661}
		}
		destroy_country = yes
	}
}

# The Old Ways (HIDDEN)
country_event = {
	id = marauder.604
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		owner_species = { save_event_target_as = marauder_species }
		create_country = {
			name_list = random
			species = event_target:marauder_species
			type = dormant_marauders
			civics = {
				civic = civic_anarcho_tribalism
				civic = random
			}
			flag = {
				icon = {
					category = "pirate"
					file = "flag_pirate_5.dds"
				}
				background= {
					category = "backgrounds"
					file = "00_solid.dds"
				}
				colors={
					"black"
					"black"
					"null"
					"null"
				}
			}
			ethos = {
				ethic = ethic_fanatic_militarist
				ethic = ethic_xenophobe
				ethic = ethic_socialism
				ethic = ethic_spiritualist
			}
			ignore_initial_colony_error = yes
		}
		last_created_country = {
			save_event_target_as = restored_marauders
			set_country_flag = restored_marauders_flag
			set_name = random
			if = {
				limit = { root = { has_country_flag = marauder_1 } }
				set_country_flag = marauder_1
				break = yes
			}
			if = {
				limit = { root = { has_country_flag = marauder_2 } }
				set_country_flag = marauder_2
				break = yes
			}
			if = {
				limit = { root = { has_country_flag = marauder_3 } }
				set_country_flag = marauder_3

			}
		}
		every_owned_fleet = {
			limit = {
				OR = {
					has_fleet_flag = satrapy_garrison
					has_fleet_flag = satrapy_garrison_fleet
					has_fleet_flag = horde_auxuliaries
				}
			}
			destroy_fleet = this
		}
		every_owned_fleet = {
			set_owner = event_target:restored_marauders
		}
		every_system_within_border = {
			limit = { exists = starbase }
			starbase = {
				set_owner = event_target:restored_marauders
			}
		}

		# Establish Communications
		every_country = {
			limit = { has_communications = root }
			establish_communications_no_message = event_target:restored_marauders
		}
		every_country = {
			limit = { has_modifier = satrapy_of_horde }
			remove_modifier = "satrapy_of_horde"
			country_event = { id = marauder.670 days = 10 }
		}
		observer_event = { id = observer.21 }
		every_country = {
			limit = { is_ai = no }
			country_event = { id = marauder.630}
		}
		destroy_country = yes
	}
}